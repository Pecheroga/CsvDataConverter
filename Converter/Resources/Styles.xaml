<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Window  -->
    <Style x:Key="WinMainStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource MainWinBg}" />
    </Style>

    <Style x:Key="WinInformStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource MainWinBg}" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="120" />
    </Style>

    <Style x:Key="WinAddEditStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource MainWinBg}" />
        <Setter Property="MinWidth" Value="800" />
        <Setter Property="Height" Value="150" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
    </Style>

    <!--  Label  -->
    <Style x:Key="LblInputFieldsStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
    </Style>

    <!--  TextBox  -->
    <Style x:Key="TxbInputFieldsStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="Background" Value="{StaticResource TbxBg}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxLength" Value="50" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Margin" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource TbxIsFocusedBg}" />
                <Setter Property="Foreground" Value="{StaticResource IsFocusedFg}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TxbFileNameStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="Background" Value="{StaticResource TbxBg}" />
        <Setter Property="Width" Value="400" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="5,0,10,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--  TextBlock  -->
    <Style x:Key="TxblHeaderBaseStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="TxblH1TextStyle"
        BasedOn="{StaticResource TxblHeaderBaseStyle}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
    </Style>

    <Style
        x:Key="TxblH2TextStyle"
        BasedOn="{StaticResource TxblHeaderBaseStyle}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TxblSimpleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,5,0,0" />
    </Style>

    <Style x:Key="TxblProgressStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!--  Run  -->
    <Style x:Key="RunWarning" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{StaticResource RunWarningFb}" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!--  Button  -->
    <Style x:Key="BtnBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Height" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Name="BtnBorder"
                        Padding="1"
                        Background="{StaticResource BtnBg}"
                        BorderThickness="0.9">
                        <ContentPresenter
                            Name="ContentPresenterBtn"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource BtnIsMouseOverBg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource BtnIsNotEnabledBg}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="BtnBorder" Property="BorderBrush" Value="{StaticResource IsKeyboardFocused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BtnIsNotEnabledFg}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="BtnOkStyle"
        BasedOn="{StaticResource BtnBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource BtnOkFg}" />
    </Style>

    <!--  Border  -->
    <Style x:Key="BrdrContainerOfOutputDtg" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="{StaticResource BrdrContainerOfOutputDtgBd}" />
    </Style>

    <!--  ProgressBar  -->
    <Style x:Key="PrgrsbStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Width" Value="390" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Visibility" Value="Visible" />
    </Style>

    <!--  StackPanel  -->
    <Style x:Key="StckPnlInputBtnStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!--  ScrollViewer  -->
    <Style x:Key="ScrlVwrStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CanContentScroll" Value="True" />
    </Style>

    <!--  DataGrid  -->
    <Style x:Key="DtgBaseStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserAddRows" Value="True" />
        <Setter Property="CanUserDeleteRows" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style
        x:Key="DtgOutputStyle"
        BasedOn="{StaticResource DtgBaseStyle}"
        TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="{StaticResource DtgBg}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="All" />
    </Style>

    <Style
        x:Key="DtgSettingsStyle"
        BasedOn="{StaticResource DtgBaseStyle}"
        TargetType="{x:Type DataGrid}">
        <Setter Property="Height" Value="300" />
        <Setter Property="Background" Value="{StaticResource DtgBg}" />
        <Setter Property="ColumnWidth" Value="200" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style x:Key="DtgHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource DtgHeaderBg}" />
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
    </Style>

    <Style x:Key="DtgCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{StaticResource DtgCellBg}" />
        <Setter Property="Padding" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource IsKeyboardFocused}" />
                <Setter Property="Background" Value="{StaticResource DtgCellIsSelectedBg}" />
                <Setter Property="Foreground" Value="{StaticResource IsFocusedFg}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DtgRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{StaticResource DtgRowHeaderBg}" />
    </Style>

    <Style x:Key="DtgTextColumnElementStyle">
        <Setter Property="TextBox.TextWrapping" Value="Wrap" />
    </Style>

    <!--  Items Control  -->
    <Style x:Key="ItmCtrlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <!--  Menu  -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Height="20" Background="{StaticResource MenuBg}">
                        <StackPanel
                            ClipToBounds="True"
                            IsItemsHost="True"
                            Orientation="Horizontal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource MainTextFg}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="MenuItemBorder">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="IconColumn" Width="25" />
                                <ColumnDefinition x:Name="HeaderColumn" Width="100" />
                                <ColumnDefinition x:Name="InputGestureTextColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Popup
                                x:Name="SubMenuPopup"
                                Focusable="False"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border
                                    Background="{StaticResource MenuItemBg}"
                                    BorderBrush="{StaticResource MenuItemBorder}"
                                    BorderThickness="1">
                                    <Grid IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                            <ContentPresenter
                                x:Name="IconPresnter"
                                Grid.Row="0"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                ContentSource="Icon" />
                            <ContentPresenter
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                            <ContentPresenter
                                Grid.Row="0"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                ContentSource="InputGestureText" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="HeaderColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="IconColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="IconPresnter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter TargetName="HeaderColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="IconColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="IconPresnter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="FontWeight" Value="Regular" />
                            <Setter Property="Margin" Value="4,1,4,1" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource MenuItemIsHighLightBg}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource MenuItemIsNotEnabledFg}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Scrollbar  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent" />
                        <Border
                            x:Name="Rectangle1"
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource ScrBrFg}" />
        <Setter Property="Background" Value="{StaticResource ScrBrBg}" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="GridRoot"
                        Width="10"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            Focusable="false"
                            IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>