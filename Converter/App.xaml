<Application
    x:Class="Converter.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="Mvvm/View/MainView.xaml">
    <Application.Resources>
        <Style x:Key="LblEditStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="Azure" />
        </Style>
        <Style x:Key="TxbEditStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="Azure" />
            <Setter Property="Background" Value="DimGray" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="MaxLength" Value="50" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Margin" Value="5" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TxbFileNameStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="400" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="5,0,10,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="Background" Value="DimGray" />
            <Setter Property="Foreground" Value="Azure" />
        </Style>

        <Style x:Key="TxblStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Azure" />
        </Style>

        <Style
            x:Key="TxblProgressStyle"
            BasedOn="{StaticResource TxblStyle}"
            TargetType="{x:Type TextBlock}">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style x:Key="BtnStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Width" Value="70" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="#FF586780" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Foreground" Value="Azure" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Name="BorderBtn"
                            Padding="1"
                            Background="#FF586780"
                            BorderThickness="0.9">
                            <ContentPresenter
                                Name="ContentPresenterBtn"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BorderBtn" Property="Background" Value="#FF6D7A91" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="BorderBtn" Property="Background" Value="GhostWhite" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="BorderBtn" Property="BorderBrush" Value="Chartreuse" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="BtnOkStyle"
            BasedOn="{StaticResource BtnStyle}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="MediumSpringGreen" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DtgStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="CanUserAddRows" Value="True" />
            <Setter Property="CanUserDeleteRows" Value="True" />
            <Setter Property="SelectionMode" Value="Single" />
        </Style>

        <Style
            x:Key="DtgOutputStyle"
            BasedOn="{StaticResource DtgStyle}"
            TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="AutoGenerateColumns" Value="True" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="All" />
        </Style>

        <Style
            x:Key="DtgSettingsStyle"
            BasedOn="{StaticResource DtgStyle}"
            TargetType="{x:Type DataGrid}">
            <Setter Property="Height" Value="300" />
            <Setter Property="ColumnWidth" Value="200" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserSortColumns" Value="True" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        </Style>

        <Style x:Key="DtgHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#FF555555" />
            <Setter Property="Foreground" Value="Azure" />
        </Style>

        <Style x:Key="DtgCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Gray" />
            <Setter Property="Padding" Value="30" />
            <Setter Property="Foreground" Value="Azure" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Chartreuse" />
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DtgRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Background" Value="#FF586780" />
        </Style>

        <Style x:Key="DtgTextColumnElementStyle">
            <Setter Property="TextBox.TextWrapping" Value="Wrap" />
        </Style>

        <Style TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Height="20" Background="#FF424242">
                            <StackPanel
                                ClipToBounds="True"
                                IsItemsHost="True"
                                Orientation="Horizontal" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="Azure" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="MenuItemBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="IconColumn" Width="25" />
                                    <ColumnDefinition x:Name="HeaderColumn" Width="100" />
                                    <ColumnDefinition x:Name="InputGestureTextColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Popup
                                    x:Name="SubMenuPopup"
                                    Focusable="False"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border
                                        Background="#1b1b1b"
                                        BorderBrush="DimGray"
                                        BorderThickness="1">
                                        <Grid IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                </Popup>
                                <ContentPresenter
                                    x:Name="IconPresnter"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon" />
                                <ContentPresenter
                                    x:Name="HeaderContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                                <ContentPresenter
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    ContentSource="InputGestureText" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                                <Setter TargetName="HeaderColumn" Property="Width" Value="Auto" />
                                <Setter TargetName="IconColumn" Property="Width" Value="Auto" />
                                <Setter TargetName="IconPresnter" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter TargetName="HeaderColumn" Property="Width" Value="Auto" />
                                <Setter TargetName="IconColumn" Property="Width" Value="Auto" />
                                <Setter TargetName="IconPresnter" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="FontWeight" Value="Regular" />
                                <Setter Property="Margin" Value="4,1,4,1" />
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="MenuItemBorder" Property="Background" Value="#627390" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Scrollbar Thumbs  -->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="Transparent" />
                            <Border
                                x:Name="Rectangle1"
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ScrollBars  -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid
                            x:Name="GridRoot"
                            Width="10"
                            Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track
                                x:Name="PART_Track"
                                Grid.Row="0"
                                Focusable="false"
                                IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb
                                        x:Name="Thumb"
                                        Background="{TemplateBinding Foreground}"
                                        Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        x:Name="PageUp"
                                        Command="ScrollBar.PageDownCommand"
                                        Focusable="false"
                                        Opacity="0" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        x:Name="PageDown"
                                        Command="ScrollBar.PageUpCommand"
                                        Focusable="false"
                                        Opacity="0" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="12" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
